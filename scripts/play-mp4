#!/usr/bin/perl -w
# $Revision: 1.2 $
# $Date: 2005-10-15 12:47:09 $
# Luis Mondesi < lemsx1@gmail.com >
#
# DESCRIPTION: a rustic script to play mp4 files in a given directory
# USAGE: cd mp4-dir && play-mp4
# LICENSE: GPL

use strict;
$|++;

my $revision = "1.0"; # version

# standard Perl modules
use Getopt::Long;
Getopt::Long::Configure('bundling');
#use POSIX;                  # cwd() ... man POSIX
use File::Spec::Functions;  # abs2rel() and other dir/filename specific
#use File::Copy;
use File::Find;     # find();
# use File::Basename; # basename() && dirname()
# use FileHandle;     # for progressbar

# Args:
my $PVERSION=0;
my $HELP=0;
my $DEBUG=0;
# get options
GetOptions(
    # flags
    'v|version'         =>  \$PVERSION,
    'h|help'            =>  \$HELP,
    'D|debug'           =>  \$DEBUG,
    # strings
    #'o|option=s'       =>  \$NEW_OPTION,
    # numbers
    #'a|another-option=i'      =>  \$NEW_ANOTHER_OPTION,
);

if ( $HELP ) { 
    use Pod::Text;
    my $parser = Pod::Text->new (sentence => 0, width => 78);
    $parser->parse_from_file($0,\*STDOUT);
    exit 0;
}

if ( $PVERSION ) { print STDOUT ($revision); exit 0; }

# helper functions
sub _int
{
    my $str=shift;
    $str =~ s/-.*$//g; # assumes filenames are in the form: track-filename.m4a
    $str =~ s/[^0-9]//g; # remove non-integers
    # TODO if $str is blank return what?
    return int($str);
}
sub which 
{
    # @param 0 string := binary to find in $ENV{PATH}
    # @return binary path or undef
    my $binary = shift;
    return undef if (not defined $binary);
    my $path = $binary;
    foreach my $binary_path ( split(/:/,$ENV{"PATH"}) )
    {
        last if ( -x $path );
        $path = File::Spec->catfile($binary_path,$binary);
    }
    return $path; # undef means not found
}

# main script starts
my @ls = glob("*.m4a");
@ls = sort { _int($a) <=> _int($b) } @ls;

for (@ls)
{
    my $REAL = which("realplay");
    if ( defined $REAL )
    {
        print ("playing $_ with realplay\n");
        system("$REAL --quit \"$_\"");
        exit $? if ($?!=0);
    }
}

__END__

=head1 NAME

play-mp4 - epoch2date script for Perl

=head1 SYNOPSIS

B<play-mp4>  [-v,--version]
                [-D,--debug] 
                [-h,--help]

=head1 DESCRIPTION 

    This script ...

=head1 OPTIONS

=over 8

=item -v,--version

prints version and exits

=item -D,--debug

enables debug mode

=item -h,--help

prints this help and exits

=back

=head1 AUTHOR

Luis Mondesi <lemsx1@gmail.com>

=cut

