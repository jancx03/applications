#!/usr/bin/perl -w
# Luis Mondesi < lemsx1@hotmail.com >
# 
# DESCRIPTION: use this script to untar, unzip, unrar, etc...,
# a bunch of files with extensions: .tar.bz2, .tar.gz, .zip, .rar

use File::Spec::Functions;

foreach my $i ( @ARGV )
{
    if ( -r $i )
    {
        # simple CASE/ESAC:
        ( $i =~ /(\.tar\.(g|b)z(ip2)*|\.t(g|b)z)$/i ) and untar($i) and next; # /bin/uncompress could take care of this but not bzip2 files
        ( $i =~ /\.zip$/i ) and unzip($i) and next;
        ( $i =~ /\.ra[[:alnum:]]+$/i ) and unrar($i) and next;
        ( $i =~ /(\.gz|\-gz|\.z|\-z|\_z|.Z)$/i ) and ungzip($i) and next;
    }
}

sub ungzip
{
    my $file = shift;
    return undef if ( not defined $file );
    my $binary = which("gunzip");
    return undef if ( not defined $binary );

    system("$binary $file");
    return $?;
}


sub unrar
{
    my $file = shift;
    return undef if ( not defined $file );
    my $binary = which("unrar");
    return undef if ( not defined $binary);

    system("$binary $file");
    return $?;
}

sub unzip
{
    my $file = shift;
    return undef if ( not defined $file );
    my $binary = which("unzip");
    return undef if ( not defined $binary );

    system("$binary $file");
    return $?;
}

sub untar
{
    my $file = shift;
    return undef if ( not defined $file );
    my $binary = shift;
    return undef if ( not defined $binary);

    my $_util = ( $file =~ /bz/i) ? "j":"z";
   
    system("$binary x".$_util."f $file");
    return $?;
}

sub which 
{
    # @param 0 string := binary to find in $ENV{PATH}
    # @return binary path or undef
    my $binary = shift;
    my $path = undef;
    foreach my $binary_path ( split(/:/,$ENV{"PATH"}) )
    {
        $path = File::Spec->catfile($binary_path,$binary);
        last if ( -x $path );
    }
    return $path; # undef means not found
}
