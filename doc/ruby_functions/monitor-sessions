#!/usr/bin/ruby
# $Revision: 0.1 $
# $Date: 2010-08-06 14:56 EDT $
# Luis Mondesi <lemsx1@gmail.com>
#
# DESCRIPTION: paranoic script to inform you of remote users
# USAGE:
# LICENSE: GPL
# Bugs:
# - if two or more sessions are open in the same minute, we only report 1

require 'logger'

# some defaults. change as needed
time = 120      # after 120 sec report all sessions again
sleep_sec = 10  # seconds to sleep
log = Logger.new("/tmp/#{$0.split(/\//).last}.log", "daily", 1048576)

begin
    # internal use
    remoteusers = Hash.new
    _time = time
    while true
        sessions=`/usr/bin/w | grep -v LOGIN@ | grep -v 'load average' | grep -v $USER`

        if sessions.size > 0
            sessions.each do |l|
                fields = l.split(/\s+/)
                u = fields.first.to_s
                t = fields[3].to_s
                
                key =  "#{u} (#{t})"
                unless remoteusers.has_key? key
                    remoteusers[key] = true
                end
            end
            remoteusers.each do |k,reportuser|
                if reportuser
                    s = "User logged in: #{k}\n" 
                    log.info "#{s}"
                    # notify-send is part of libnotify-bin
                    if test ?x, "/usr/bin/notify-send"
                        `notify-send -i error "#{s}"`
                    else
                        `zenity --error --text="#{s}"`
                    end
                    remoteusers[k] = false # already reported this
                end
            end 
        end
        sleep sleep_sec
        if _time < 0
            _time = time
            # clean and report all again
            remoteusers = Hash.new

            log.info "#{$0.split(/\//).last}: reseting..."
        else
            _time -= sleep_sec
        end
    end
rescue Interrupt
    log.fatal "#{$0} interrupted"
end
