#!/bin/sh
LOCKFILE="/tmp/.apt-move.lck"
ARCH="i386" # default arch for this script
MOVEFROMTMP=1
RUNUPDATE=1
MAKELOCALMIRROR=1
CACHEDIR="/var/cache/apt/archives/"
LOCALMIRROR="/home/Shared/debian" # apt-ftparchive
LOCALRELEASE="local" # name of the local release... see below (is just a directory)

set -e

function move_deb_from_tmp()
{
    for i in `/bin/ls /tmp/*.deb /home/Shared/tmp/*.deb 2> /dev/null`; do
        # move new packages into archives directory
        /bin/mv -u "$i" $CACHEDIR
        if [ -f "$i" ]; then
            # if old package, remove it from /tmp /home/Shared/tmp
            rm -f "$i";
        fi
    done
}

if [ -f "$LOCKFILE" ]; then
    echo "Another instance running ... exiting "
    exit 0
fi
# create lock with timestamp
date > "$LOCKFILE"

if [ $MOVEFROMTMP -eq 1 ]; then
    move_deb_from_tmp
fi

if [ $RUNUPDATE -eq 1 ]; then
    apt-get update > /dev/null 2>&1
    apt-get autoclean  > /dev/null 2>&1
fi

apt-move update > /dev/null 2>&1

# do local dist
if [ $MAKELOCALMIRROR -eq 1 ]; then
    cd $LOCALMIRROR 
    # .deb's compiled locally are found here:
    mkdir -p dists/$LOCALRELEASE/main/binary-$ARCH  
    # put your sources here:
    mkdir -p dists/$LOCALRELEASE/main/source

    if [ -d "incoming" ]; then
        mv incoming/*.deb dists/$LOCALRELEASE/main/binary-$ARCH  > /dev/null 2>&1
        mv incoming/*.{dsc,gz,bz2} dists/$LOCALRELEASE/main/source > /dev/null 2>&1
    fi

    apt-ftparchive packages dists/$LOCALRELEASE/ > dists/$LOCALRELEASE/main/binary-$ARCH/Packages
    # compress and rename
    gzip -f dists/$LOCALRELEASE/main/binary-$ARCH/Packages
    apt-ftparchive contents dists/$LOCALRELEASE/ > dists/$LOCALRELEASE/main/binary-$ARCH/Contents-$ARCH
    # compress and rename
    gzip -f dists/$LOCALRELEASE/main/binary-$ARCH/Contents-$ARCH
    apt-ftparchive release dists/$LOCALRELEASE/ > dists/$LOCALRELEASE/Release
    #echo "To access your local mirror, add a line"
    #echo "like this in /etc/apt/sources.list"
    #echo "deb file:/$LOCALMIRROR $LOCALRELEASE main"
fi
rm -f "$LOCKFILE"
